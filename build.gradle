/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'hendrik.vanderlinde' at '3/3/17 2:12 PM' with Gradle 2.10
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.10/userguide/tutorial_java_projects.html
 */

buildscript {
   if(JavaVersion.current() != JavaVersion.VERSION_11) 
   throw new GradleException("This project requires Java 11, but it's running on "+JavaVersion.current()) 

    
    repositories {
        jcenter()
        mavenCentral()
    }
}

plugins {
    id "org.hidetake.ssh" version "2.10.1"
    id 'java' 
    id 'application'
}

repositories { // scope also outside buildscript
    mavenCentral()
}

dependencies {
    compile 'me.tongfei:progressbar:0.8.1'
    testCompile('org.junit.jupiter:junit-jupiter:5.4.2')
    testImplementation('org.junit.jupiter:junit-jupiter:5.4.2')
}

test {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed"
  }
}

// Global settings
ssh.settings {
  knownHosts = allowAnyHosts // Disable host key verification
}

mainClassName = 'server.FileTransferServer'
version = '1.0.0'

jar {
    manifest {
        attributes 'Implementation-Title': 'Nedap University Module 2 Final Project',
                'Implementation-Version': version,
                'Main-Class': mainClassName
    }
}

// need to configure this one from scratch
task clientJar(type: Jar) {
    // referring to the output in this way
    // allows Gradle to infer task dependencies automatically
    from sourceSets.main.output 
    
    manifest {
        attributes 'Implementation-Title': 'Nedap University Module 2 Final Project',
                'Implementation-Version': version,
                'Main-Class': 'client.FileTransferClient'
    }

    baseName = 'FileTransferClient'
}

// need to configure this one from scratch
task serverJar(type: Jar) {
    // referring to the output in this way
    // allows Gradle to infer task dependencies automatically
    from sourceSets.main.output 

    manifest {
        attributes 'Implementation-Title': 'Nedap University Module 2 Final Project',
                'Implementation-Version': version,
                'Main-Class': 'server.FileTransferServer'
    }    

    baseName = 'FileTransferServer'
}

// one way to make `gradle build` run both Jar tasks
assemble.dependsOn(clientJar)
assemble.dependsOn(serverJar)


remotes {
    pi {
        role 'masterNode'
        host = 'nu-pi-huub.home' // <ENTER PI HOSTNAME OR IP-ADDRESS HERE!! When connected to wifi hotspot: '172.16.1.1'
        user = 'pi'
        password = 'raspberry'
    }
}

task status {
    doLast {
        ssh.run {
            session(remotes.pi) {
                execute 'sudo systemctl status num2.service'
            }
        }
    }
}

task deploy {
    doLast {
        ssh.run {
            session(remotes.pi) {
                put from: "${project.rootDir}/build/libs/NU-MOD2_FinalAssignment-${version}.jar", into: "/home/pi/NUM2.jar" //has to be NUM2, because of registered service
                execute 'sudo systemctl restart num2.service'
            }
        }
    }
}

deploy.dependsOn jar
